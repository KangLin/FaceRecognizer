# Author: Kang Lin <kl222@126.com>

name: macos

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_macos.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_macos:
    strategy:
      matrix:
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]
        qt_version: [6.9.0, 5.15.2, 5.12.12]
        qt_arch: [clang_64]
        VCPKG_TARGET_TRIPLET: [x64-osx]
        include:
          - qt_version: 6.9.0
            qt_modules: qtscxml qt5compat qtmultimedia
            ENABLE_DOWNLOAD_MODULE: ON

          - qt_version: 5.15.2
            ENABLE_DOWNLOAD_MODULE: OFF

          - qt_version: 5.12.12
            ENABLE_DOWNLOAD_MODULE: OFF

    # See: https://docs.github.com/zh/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    # See: https://github.com/actions/runner-images/tree/main
    runs-on: macos-13

    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      BUILD_DIR:   ${{github.workspace}}/build
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install
      qt_modules: qtwebengine ${{matrix.qt_modules}}
      VCPKGGITCOMMITID: d8ad13c401b30c2836d00b8923c9127f05f591c7
      VCPKG_TARGET_TRIPLET: ${{matrix.VCPKG_TARGET_TRIPLET}}
      artifact_name: build_macos
      FaceRecognizer_VERSION: v0.0.4
      ENABLE_DOWNLOAD_MODULE: ${{matrix.ENABLE_DOWNLOAD_MODULE}}

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make directories
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{env.BUILD_DIR}}

      - name: Cache installed
        uses: actions/cache@v4
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: install_macos_qt${{matrix.qt_version}}_${{matrix.qt_arch}}_${{matrix.BUILD_TYPE}}

      - name: Install application
        run: |
          brew install nasm

      - name: run-vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{env.VCPKGGITCOMMITID}}
          vcpkgDirectory: ${{runner.workspace}}/vcpkg/

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          dir: '${{env.TOOLS_DIR}}/qt' # optional
          version: '${{matrix.qt_version}}' # optional, default is 5.15.2
          arch: '${{matrix.qt_arch}}' # optional
          modules: '${{env.qt_modules}}' # optional. See: https://ddalcino.github.io/aqt-list-server/
          cache: true
          cache-key-prefix: cached_qt_${{matrix.qt_version}}_macos

      - name: build SeetaFace2
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          if [ ! -f ${{env.INSTALL_DIR}}/lib/cmake/SeetaFaceDetectorConfig.cmake ]; then
            git clone https://github.com/KangLin/SeetaFace2.git
            cd SeetaFace2
            cmake -E make_directory build
            cd build
            cmake .. \
                -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX="${{ env.INSTALL_DIR }}" \
                -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake" \
                -DVCPKG_INSTALLED_DIR=${{env.INSTALL_DIR}}/SeetaFace2/vcpkg_installed \
                -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON \
                -DVCPKG_VERBOSE=ON \
                -DVCPKG_TARGET_TRIPLET=${{matrix.VCPKG_TARGET_TRIPLET}} \
                -DUSE_OPENMP=OFF
            cmake --build . --config ${{matrix.BUILD_TYPE}}
            cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
          fi

      - name: build libfacedetection
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          if [ ! -f ${{env.INSTALL_DIR}}/lib/cmake/facedetection/facedetectionConfig.cmake ]; then
            git clone https://github.com/ShiqiYu/libfacedetection.git
            cd libfacedetection
            cmake -E make_directory build
            cd build
            cmake .. \
                -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} \
                -DCMAKE_INSTALL_PREFIX="${{ env.INSTALL_DIR }}" \
                -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake" \
                -DVCPKG_INSTALLED_DIR=${{env.INSTALL_DIR}}/libfacedetection/vcpkg_installed \
                -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON \
                -DVCPKG_VERBOSE=ON \
                -DVCPKG_TARGET_TRIPLET=${{matrix.VCPKG_TARGET_TRIPLET}} \
                -DBUILD_SHARED_LIBS=ON
            cmake --build . --config ${{matrix.BUILD_TYPE}}
            cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
          fi

      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: git clone https://github.com/KangLin/RabbitCommon.git

      - name: Compile FaceRecognizer
        working-directory: ${{github.workspace}}/build
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        run: |
          cmake ${{github.workspace}} \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} \
              -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/build/install \
              -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}\scripts\buildsystems\vcpkg.cmake" \
              -DVCPKG_VERBOSE=ON \
              -DX_VCPKG_APPLOCAL_DEPS_INSTALL=ON \
              -DVCPKG_APPLOCAL_DEPS=ON \
              -DVCPKG_TARGET_TRIPLET=${{matrix.VCPKG_TARGET_TRIPLET}} \
              -DINSTALL_QT=ON \
              -DSeetaFace_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaNet_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaFaceDetector_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaFaceLandmarker_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaFaceRecognizer_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaFaceTracker_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -DSeetaQualityAssessor_DIR=${{env.INSTALL_DIR}}/lib/cmake \
              -Dfacedetection_DIR=${{env.INSTALL_DIR}}/lib/cmake/facedetection
          cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install
          7z a FaceRecognizer_${{env.FaceRecognizer_VERSION}}_macos_qt${{matrix.qt_version}}.zip ./install/*

      - name: Update artifact
        if: ${{ matrix.BUILD_TYPE == 'Release' && matrix.qt_version == '6.9.0' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}_${{matrix.qt_version}}_${{matrix.qt_arch}}
          path: |
            ${{github.workspace}}/build/FaceRecognizer_${{env.FaceRecognizer_VERSION}}_macos_qt${{matrix.qt_version}}.zip
