# Author: Kang Lin<kl222@126.com>

name: Doxygen

on:
  workflow_call:
    outputs:
      name:
        description: "The artifact name"
        value: ${{ jobs.build_doxygen.outputs.name }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_doxygen:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE:  Release
      SOURCE_DIR:  ${{github.workspace}}/.cache/source
      TOOSL_DIR:   ${{github.workspace}}/.cache/tools
      INSTALL_DIR: ${{github.workspace}}/.cache/install_doxygen
      DOXYGEN_VERSION: 1.9.8
      FaceRecognizer_VERSION: "v0.0.4"
      artifact_name: build_doxygen

    # Map the job outputs to step outputs
    outputs:
      name: ${{ env.artifact_name }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: make_directory
        run: |
          cmake -E make_directory ${{env.SOURCE_DIR}}
          cmake -E make_directory ${{env.TOOSL_DIR}}
          cmake -E make_directory ${{env.INSTALL_DIR}}
          cmake -E make_directory ${{github.workspace}}/build

      - name: Cache installed
        uses: actions/cache@v4
        id: cache-installed
        with:
          path: |
            ${{env.INSTALL_DIR}}
          key: install-doxygen

      - name: install apt packages
        run: |
          sudo apt update -y -q
          sudo apt upgrade -y -q
          sudo apt install -y -q cmake build-essential graphviz \
              qttools5-dev qttools5-dev-tools qtbase5-dev qtbase5-dev-tools

      - name: Download doxygen
        run: |
          if [ ! -d ${{env.TOOSL_DIR}}/doxygen-${{env.DOXYGEN_VERSION}} ]; then
              cd ${{env.TOOSL_DIR}}
              wget https://www.doxygen.nl/files/doxygen-${{env.DOXYGEN_VERSION}}.linux.bin.tar.gz
              tar xzf doxygen-${{env.DOXYGEN_VERSION}}.linux.bin.tar.gz
          fi
          sudo cp ${{env.TOOSL_DIR}}/doxygen-${{env.DOXYGEN_VERSION}}/bin/doxygen /usr/bin/doxygen
      
      - name: git clone RabbitCommon
        working-directory: ${{env.SOURCE_DIR}}
        run: git clone https://github.com/KangLin/RabbitCommon.git
        
      - name: build doxygen
        working-directory: ${{github.workspace}}
        env:
          RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
          BUILD_DOCS: ON
        run: |
          cmake -E make_directory ${{github.workspace}}/build
          cd ${{github.workspace}}/build
          cmake ${{github.workspace}} \
              -DBUILD_APP:BOOL=OF \
              -DBUILD_ABOUT:BOOL=OFF \
              -DBUILD_ADMINAUTHORISER:BOOL=OFF \
              -DBUILD_UPDATE:BOOL=OFF \
              -DCMARK_SHARED=OFF \
              -DCMARK_TESTS=OFF \
              -DCMARK_STATIC=ON \
              -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
              -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install \
              -DBUILD_DOCS=ON
          cmake --build . --target doc_Chinese doc_English
          7z a LunarCalendar_${{env.FaceRecognizer_VERSION}}_document.zip Doxygen/*

      - name: Update artifact
        if: ${{ env.BUILD_TYPE == 'Release' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: |
            ${{github.workspace}}/build/LunarCalendar_${{env.FaceRecognizer_VERSION}}_document.zip

      - name: Deploy to GitHub Pages
        if: startsWith(github.ref, 'refs/tags/')
        uses: crazy-max/ghaction-github-pages@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_branch: gh-pages
          build_dir: build/Doxygen

      - name: Deploy to sourceforge.io
        if: startsWith(github.ref, 'refs/tags/')
        working-directory: ${{env.SOURCE_DIR}}
        run: |
          echo "${{secrets.GIT_SSH_PRIVATE_KEY}}" > id_rsa
          chmod 600 id_rsa
          scp -i id_rsa -o StrictHostKeyChecking=no -r ${{github.workspace}}/build/Doxygen/. kl222@web.sourceforge.net:/home/project-web/lunarlalendar/htdocs/${{env.FaceRecognizer_VERSION}}
      
